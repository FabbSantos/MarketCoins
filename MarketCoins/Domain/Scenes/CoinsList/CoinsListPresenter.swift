//
//  CoinsListPresenter.swift
//  MarketCoins
//
//  Created by user239336 on 10/10/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CoinsListPresentationLogic {
  func presentGlobalValues(response: CoinsList.FetchGlobalValues.Response)
  func presentListCoins(response: [CoinsList.FetchListCoins.Response])
  func presentError(error: CryptocurrencyError)
}

class CoinsListPresenter: CoinsListPresentationLogic {
  weak var viewController: CoinsListDisplayLogic?
  
    func presentGlobalValues(response: CoinsList.FetchGlobalValues.Response) {
        var globalValues: [CoinsList.FetchGlobalValues.ViewModel.GlobalValues] = []
        
        for (_, value) in response.totalMarketCap {
            globalValues.append(CoinsList.FetchGlobalValues.ViewModel.GlobalValues(
                title: "Global Market Capitalization",
                value: value.toCurrency()))
        }
        for (_, value) in response.totalVolume {
            globalValues.append(CoinsList.FetchGlobalValues.ViewModel.GlobalValues(
                title: "Volume in 24h",
                value: value.toCurrency()))
        }
        
        let viewModel = CoinsList.FetchGlobalValues.ViewModel(globalValues: globalValues)
        viewController?.displayGlobalValues(viewModel: viewModel)
    }
    func presentListCoins(response: [CoinsList.FetchListCoins.Response]) {
        let coins = response.map{ response in
            var rank = "_"
            if let marketCapRank = response.marketCapRank{
                rank = "\(marketCapRank)"
            }
            return CoinsList.FetchListCoins.ViewModel.Coin(
                id: response.id,
                name: response.name,
                rank: rank,
                iconUrl: response.image,
                symbol: response.symbol.uppercased(),
                price: response.currentPrice.toCurrency(),
                priceChangePercentage: response.priceChangePercentage.toPercentage(),
                marketCapitalization: response.marketCap.toCurrency())
        }
        
        let viewModel = CoinsList.FetchListCoins.ViewModel(
            coins: coins
        )
        viewController?.displayListCoins(viewModel: viewModel)

    }
    func presentError(error: CryptocurrencyError) {
        viewController?.displayError(error: error.errorDescription)
    }
}
